/*css variables are used in colors we dont want to change color every time for every single item instead we can use css variables and control color*/
/*VARIABLES ARE USED IN: 
1.only when you use some elements multiple times.
2.when you want to change something we can make the changes in variables instead of moving single element.
3.can define any css property based on the need.
CSS VARIABLES NOT TO USE IN
1.padding: 30px ; because padding cannot be applied for all samely it changes according to our perspective.
*/
/*root is a global variable. we can declare css property without root.the reason behind this is to not complicate the things.
We use root we have to declare css property while using root its mandatory
website for hoosing color pallete combination.
colorhunt
colorss
it shows best design for webpages eg: login form
try to practise making designs.
dribble
exitfund
merge
product hunt*/
:root{
    --primry:rgb(255, 68, 0);
    --muted:pink;
    --radius:16px;
}
body{
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
.profile{
    display:flex;
    gap:16px;
    margin:50px auto;
    width:600px;
}
.user{
    
    height:160px;
    object-fit:cover;
    border-radius: 16px;
}
.btn{
    background-color:var(--primry);
    /*background-color: black;*/
    color:white;
    padding:16px 30px;
    border: 1px solid var(--primry);
    border-radius:16px;
    font-size: 16px;
}
.btn2{
    background-color:white;
    /*background-color: black;*/
    color:var(--primry);
    padding:16px 30px;
    border: 1px solid var(--primry);
    border-radius:16px;
    font-size: 16px;
}
.title{
    margin-top:0;
}
.desc{
    color:grey;
}
.card{
    /*width:260px;*/
    margin:auto;
    border: 1px solid lightblue;
    border-radius:var(--radius);
    padding:10px;
}
.card-img{
    width:100%;
    border-radius: var(--radius);
}
.container{
    display:grid;
    justify-content: center;
    grid-gap:20px;
    /*grid-template-columns: 300px 300px 250px;/*width of first second third*/
    grid-template-columns: repeat(auto-fill, minmax(300px,1fr));
    /*when we decrease size to make the property responsive we use it
    when we give only two values only two cardsappear next to next third card will be down
    to bring them side by side*/
    /*grid-auto-columns: 200px;/*column height*/
    /*grid-auto-rows:330px;
     defining row height*/
}
.demo{
      display:grid;
      grid-gap:20px;
      /*grid-template-columns:300px 300px 300px;
      grid-template-columns: 1fr 2fr 3fr 1fr;*/
      grid-template-columns:repeat(auto-fill,minmax(300px,1fr));/* template column works exactly as flex wrap
      width=300px 
      how far should grow=fr
      autofill=automatically fitting according to available space*/
      grid-auto-rows: 100px;
      grid-auto-columns: 200px;
}
/*1fr=fraction = how much space taking in a screen*/
.item{
    /*width:100px;
    height:100px;*/
    /*Remove height and idth while usinf fr*/
    background-color: pink;

}